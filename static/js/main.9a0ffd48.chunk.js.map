{"version":3,"sources":["components/contactEditor/ContactEditor.module.css","components/contactList/ContactList.module.css","components/section/Section.module.css","components/filter/Filter.module.css","components/App/App.module.css","components/contactEditor/ContactEditor.js","components/contactList/ContactList.js","components/section/Section.js","components/filter/Filter.js","components/contactFormManager/ContactFormManager.js","components/App/App.js","index.js"],"names":["module","exports","ContactEditor","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","elements","props","onAdd","className","styles","form","onSubmit","this","type","placeholder","onChange","button","Component","ContactList","contacts","onClose","list","map","id","key","delete","onClick","Section","title","children","section","Filter","onChangeFilter","label","ContactFormManager","filter","handleFilter","handleAddContact","contact","uuid","some","alert","prevState","handleDeleteContact","getVisibleContakt","toLowerCase","includes","persistedContakts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContakt","length","App","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a0ffd48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactEditor_form__1ahd_\",\"button\":\"ContactEditor_button__SbVZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1jnyk\",\"delete\":\"ContactList_delete__2OnRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2ADyC\",\"title\":\"Section_title__1kCH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__YoaMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1sLy6\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactEditor.module.css\";\r\n\r\nexport default class ContactEditor extends Component {\r\n  static propTypes = {\r\n    onAdd: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = e.target.elements;\r\n    this.props.onAdd(name.value, number.value);\r\n    name.value = \"\";\r\n    number.value = \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"*Enter contacts name\"\r\n            onChange={this.handleChange}\r\n          ></input>\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"*Enter contacts number\"\r\n            onChange={this.handleChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onClose }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>{name}: </p>\r\n        <span> {number}</span>\r\n\r\n        <button className={styles.delete} onClick={() => onClose(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={(e) => onChangeFilter(e.target.value)}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport ContactEditor from \"../contactEditor\";\r\nimport ContactList from \"../contactList\";\r\nimport Section from \"../section\";\r\nimport Filter from \"../filter\";\r\n\r\nclass ContactFormManager extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n  componentDidMount() {\r\n    const persistedContakts = localStorage.getItem(\"contacts\");\r\n    if (persistedContakts) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContakts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  handleFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n  handleAddContact = (name, number) => {\r\n    const contact = {\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    };\r\n    if (!name || !number) {\r\n      alert(`all required fields are not filled`);\r\n      return;\r\n    }\r\n\r\n    const alreadyRecordedContact = this.state.contacts.some(\r\n      (contact) => contact.name === name\r\n    );\r\n\r\n    alreadyRecordedContact\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState((prevState) => ({\r\n          contacts: [...prevState.contacts, contact],\r\n        }));\r\n  };\r\n  handleDeleteContact = (id) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n  getVisibleContakt = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContakt = this.getVisibleContakt();\r\n    return (\r\n      <div className=\"Contact-FormManager\">\r\n        <Section title=\"Phonebook\">\r\n          <ContactEditor onAdd={this.handleAddContact} />\r\n        </Section>\r\n\r\n        {contacts.length > 0 && (\r\n          <Section title=\"Contacts\">\r\n            {contacts.length > 1 && (\r\n              <Filter value={filter} onChangeFilter={this.handleFilter} />\r\n            )}\r\n            <ContactList\r\n              contacts={visibleContakt}\r\n              onClose={this.handleDeleteContact}\r\n            />\r\n          </Section>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ContactFormManager;\r\n","import React, { Component } from \"react\";\nimport ContactFormManager from \"../contactFormManager\";\nimport styles from \"./App.module.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n  };\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1>goit-react-hw-02-phonebook</h1>\n        <ContactFormManager />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}